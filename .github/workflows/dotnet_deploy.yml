# This workflow will build and push a .NET Core application to an Azure Web App on every push to the master branch.
#
# To configure this workflow:
#
# 1. Set up a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE with the value of your Azure publish profile.
#    Get the publish profile from the portal: https://docs.microsoft.com/visualstudio/deployment/tutorial-import-publish-settings-azure?view=vs-2019#create-the-publish-settings-file-in-azure-app-service
#
# 2. Change the values for the AZURE_WEBAPP_NAME, AZURE_WEBAPP_PACKAGE_PATH and NETCORE_VERSION environment variables  (below).
#
# For more information on GitHub Actions for Azure, refer to https://github.com/Azure/Actions
# For more samples to get started with GitHub Action workflows to deploy to Azure, refer to https://github.com/Azure/actions-workflow-samples
name: "Build and Publish"

on:
  push:
    branches:
    - main
    paths-ignore:
    - '**/*.md'
    - '**/*.gitignore'
    - '**/*.gitattributes'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy (e.g., dev, prod)'
        required: false
        default: 'dev'  # Default value for environment input
      appname:
        description: 'The Azure Web App name for deployment'
        required: true
        type: string

permissions:
  id-token: write
  contents: read

env:
  AZURE_WEBAPP_NAME: ${{ github.event.inputs.appname }} # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: './published' # set this to the path to your web app project, defaults to the repository root
  NETCORE_VERSION: '9.0.101' # set this to the .NET Core version to use

jobs:
  build:
    name: Build and Publish
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET Core SDK 
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 

    - name: Disable Globalization
      run: echo "DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=1" >> $GITHUB_ENV
    
    - name: Restore packages
      run: dotnet restore
        
    - name: Build app
      run: dotnet build --configuration Release --no-restore
    
    - name: Test app
      run: dotnet test --no-build

    - name: Prepare SonarQube Analysis
      run: |
        echo "Simulating SonarQube Preparation..."
        sleep 10

    - name: Run SonarQube Analysis
      run: |
        echo "Simulating SonarQube Analysis..."
        sleep 10

    - name: Publish app for deploy
      run: dotnet publish --configuration Release --no-build --output 

    - name: Publish Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: webapp
        path: 

  deploy-to-dev:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Azure Login using Service Principal
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: webapp
          path: ./

      - name: Deploy to Dev Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ github.event.inputs.appname }}
          package: ./

      - name: Validate Dev Deployment
        id: validate-dev
        run: |
          curl -s --head --request GET https://${{ github.event.inputs.appname }}.azurewebsites.net/ || exit 1