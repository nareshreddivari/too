name: Terraform and Dotnet Deployment Workflow

on:
  push:
    branches:
      - main  # Trigger on push to main branch
  workflow_dispatch:
    inputs:
      resourcetype:
        description: 'resourcetype to deploy (e.g., VM , Webapp)'
        required: true
        type: string
      environment:
        description: 'Environment to deploy (e.g., dev, prod)'
        required: true
        type: string
      appname:
        description: 'The Azure Web App name for deployment'
        required: true
        type: string
      infraprovision:
        description: 'Only perform an infrastructure provision'
        required: true
        type: string
      webappdeployment:
        description: 'Only perform a webapp deployment'
        required: true
        type: string

permissions:
  id-token: write
  contents: read

jobs:
  # Display input values for debugging
  display-input-values:
    runs-on: ubuntu-latest
    steps:
      - name: Display Input Values
        run: |
          echo "Resource Type: ${{ github.event.inputs.resourcetype }} "
          echo "Environment: ${{ github.event.inputs.environment }}"
          echo "App Name: ${{ github.event.inputs.appname }}"
          echo "Infra Provision: ${{ github.event.inputs.infraprovision }}"
          echo "Web App Deployment: ${{ github.event.inputs.webappdeployment }}"

  check-and-trigger-terraform:
    runs-on: ubuntu-latest
    needs: display-input-values
    if: ${{ github.event.inputs.infraprovision == 'true' }}  # Only run if infraprovision is true
    steps:
      - name: Check and Trigger Terraform Deployment
        id: terraform-deploy
        env:
          GIT_PAT: ${{ secrets.GIT_PAT }}
        run: |
          echo "Triggering Terraform Deployment Workflow using REST API..."
          # Trigger the workflow via GitHub API
          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GIT_PAT" \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/terraform_deploy.yml/dispatches \
            -d '{
              "ref": "main",
              "inputs": {
                "resourcetype": "${{ github.event.inputs.resourcetype }}",
                "environment": "${{ github.event.inputs.environment }}",
                "appname": "${{ github.event.inputs.appname }}"
              }
            }'

  check-and-trigger-dotnet:
    runs-on: ubuntu-latest
    needs: check-and-trigger-terraform
    steps:
      - name: Check and Trigger Dotnet Deployment
        id: dotnet-deploy
        env:
          GIT_PAT: ${{ secrets.GIT_PAT }}
        run: |
          echo "Triggering dotnet Deployment Workflow using REST API..."
          # Trigger the workflow via GitHub API
          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GIT_PAT" \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/dotnet_deploy.yml/dispatches \
            -d '{
              "ref": "main",
              "inputs": {
                "environment": "${{ github.event.inputs.environment }}",
                "appname": "${{ github.event.inputs.appname }}"
              }
            }'

  check-and-trigger-dotnet-only:
    runs-on: ubuntu-latest
    needs: display-input-values
    if: ${{ github.event.inputs.webappdeployment == 'true' && github.event.inputs.infraprovision == 'false' }}  # Only run if webappdeployment is true and infraprovision is false
    steps:
      - name: Check and Trigger Dotnet Deployment only
        id: dotnet-only
        env:
          GIT_PAT: ${{ secrets.GIT_PAT }}
        run: |
          echo "Triggering dotnet Deployment Workflow using REST API..."
          # Trigger the workflow via GitHub API
          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GIT_PAT" \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/dotnet_deploy.yml/dispatches \
            -d '{
              "ref": "main",
              "inputs": {
                "environment": "${{ github.event.inputs.environment }}",
                "appname": "${{ github.event.inputs.appname }}"
              }
            }'
